services:
  database:
    image: postgres:14
    environment:
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
      POSTGRES_DB: certificados_db
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db-postgres/ddl.sql:/docker-entrypoint-initdb.d/ddl.sql
    networks:
      - certificados_network

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - certificados_network

  api:
    build:
      context: ./api
    environment:
      - DATABASE_URL=postgresql://username:password@database:5432/certificados_db
      - RABBITMQ_HOST=rabbitmq
      - PORT=3000
    depends_on:
      - database
      - rabbitmq
    ports:
      - '3000:3000'
    networks:
      - certificados_network

  worker:
    build:
      context: ./worker
    environment:
      - RABBITMQ_HOST=rabbitmq
      - DATABASE_URL=postgresql://username:password@database:5432/certificados_db
    depends_on:
      - rabbitmq
      - database
    volumes:
      - ./certificados_pdf:/app/certificados_pdf
    ports:
      - "3001:3001"
    networks:
      - certificados_network

volumes:
  db_data:

networks:
  certificados_network:
    driver: bridge

